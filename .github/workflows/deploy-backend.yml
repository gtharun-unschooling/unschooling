name: 🚀 Deploy Backend to Google Cloud Run

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
      - '.github/workflows/deploy-backend.yml'
  workflow_dispatch:

env:
  PROJECT_ID: unschooling-464413
  SERVICE_NAME: llm-agents
  REGION: us-central1
  REGISTRY: gcr.io

jobs:
  deploy-backend:
    name: 🚀 Deploy Backend to Cloud Run
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      id-token: write
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      
    - name: 🔧 Setup Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v2
      with:
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ env.PROJECT_ID }}
        
    - name: 🔐 Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
        
    - name: 🏗️ Configure Docker for GCR
      run: gcloud auth configure-docker
      
    - name: 📊 Set Project
      run: gcloud config set project ${{ env.PROJECT_ID }}
      
    - name: 🔌 Enable Required APIs
      run: |
        gcloud services enable run.googleapis.com
        gcloud services enable cloudbuild.googleapis.com
        gcloud services enable aiplatform.googleapis.com
        
    - name: 🏗️ Build and Push Docker Image
      run: |
        cd backend
        gcloud builds submit --tag ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }} .
        
    - name: 🚀 Deploy to Cloud Run
      run: |
        gcloud run deploy ${{ env.SERVICE_NAME }} \
          --image ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }} \
          --platform managed \
          --region ${{ env.REGION }} \
          --allow-unauthenticated \
          --memory 2Gi \
          --cpu 2 \
          --timeout 900 \
          --concurrency 80 \
          --set-env-vars="GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}"
          
    - name: 🌐 Get Service URL
      id: get-url
      run: |
        SERVICE_URL=$(gcloud run services describe ${{ env.SERVICE_NAME }} --region=${{ env.REGION }} --format="value(status.url)")
        echo "SERVICE_URL=$SERVICE_URL" >> $GITHUB_OUTPUT
        echo "🚀 Backend deployed to: $SERVICE_URL"
        
    - name: ✅ Health Check
      run: |
        SERVICE_URL="${{ steps.get-url.outputs.SERVICE_URL }}"
        echo "🔍 Testing backend health at: $SERVICE_URL/health"
        curl -f "$SERVICE_URL/health" || exit 1
        echo "✅ Backend health check passed!"
        
    - name: 🧪 Test Plan Generation
      run: |
        SERVICE_URL="${{ steps.get-url.outputs.SERVICE_URL }}"
        echo "🧪 Testing plan generation..."
        curl -X POST "$SERVICE_URL/api/generate-plan" \
          -H "Content-Type: application/json" \
          -d '{"profile": {"child_name": "Test", "child_age": 6, "interests": ["science"], "preferred_learning_style": "visual", "plan_type": "hybrid"}}' \
          --max-time 30 || exit 1
        echo "✅ Plan generation test passed!"
        
    - name: 📝 Deployment Summary
      run: |
        echo "🎉 Backend Deployment Successful!"
        echo "📍 Service URL: ${{ steps.get-url.outputs.SERVICE_URL }}"
        echo "🔧 Project: ${{ env.PROJECT_ID }}"
        echo "🌍 Region: ${{ env.REGION }}"
        echo "📊 Service: ${{ env.SERVICE_NAME }}"
        echo ""
        echo "✅ Your customised weekly plan page will now use the updated backend!"
        echo "🔗 Test at: https://unschooling.in/customised-weekly-plan"
