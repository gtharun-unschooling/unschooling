name: Deploy to Firebase Hosting

on:
  push:
    branches:
      - main

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.11.0'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Create environment file
      run: |
        cat > .env << EOF
        REACT_APP_API_BASE_URL=${{ secrets.REACT_APP_API_BASE_URL }}
        REACT_APP_FIREBASE_API_KEY=${{ secrets.REACT_APP_FIREBASE_API_KEY }}
        REACT_APP_FIREBASE_PROJECT_ID=${{ secrets.REACT_APP_FIREBASE_PROJECT_ID }}
        REACT_APP_FIREBASE_AUTH_DOMAIN=${{ secrets.REACT_APP_FIREBASE_AUTH_DOMAIN }}
        REACT_APP_FIREBASE_STORAGE_BUCKET=${{ secrets.REACT_APP_FIREBASE_STORAGE_BUCKET }}
        REACT_APP_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.REACT_APP_FIREBASE_MESSAGING_SENDER_ID }}
        REACT_APP_FIREBASE_APP_ID=${{ secrets.REACT_APP_FIREBASE_APP_ID }}
        EOF
      
    - name: Build the app
      run: npm run build
      
    - name: Verify Node.js version
      run: |
        node --version
        npm --version
        which node
        which npm
        
    - name: Setup Google Cloud CLI and Service Account
      run: |
        # Install Google Cloud CLI
        curl -sSL https://sdk.cloud.google.com | bash
        echo "$HOME/google-cloud-sdk/bin" >> $GITHUB_PATH
        
        # Install jq for JSON validation
        sudo apt-get update && sudo apt-get install -y jq
        
        # Setup service account with proper JSON handling using Node.js
        echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}' | base64 -d > temp-service-account.json
        
        # Use Node.js to properly format the JSON
        node -e "
        const fs = require('fs');
        const data = JSON.parse(fs.readFileSync('temp-service-account.json', 'utf8'));
        data.private_key = data.private_key.replace(/\\\\n/g, '\n');
        fs.writeFileSync('firebase-service-account.json', JSON.stringify(data, null, 2));
        "
        rm temp-service-account.json
        
        export GOOGLE_APPLICATION_CREDENTIALS="$(pwd)/firebase-service-account.json"
        echo "GOOGLE_APPLICATION_CREDENTIALS=$(pwd)/firebase-service-account.json" >> $GITHUB_ENV
        
        # Verify JSON is valid
        cat firebase-service-account.json | jq .
        
        # Authenticate with service account
        gcloud auth activate-service-account --key-file=firebase-service-account.json
        gcloud config set project unschooling-464413
        
        echo "âœ… Service account authenticated with Google Cloud"
        
    - name: Deploy to Firebase Hosting
      run: |
        npm install -g firebase-tools@latest
        
        # Use service account authentication
        export GOOGLE_APPLICATION_CREDENTIALS="$(pwd)/firebase-service-account.json"
        
        # Deploy using service account
        echo "ðŸš€ Deploying with service account authentication..."
        firebase deploy --only hosting --project unschooling-464413
      env:
        NODE_OPTIONS: "--max-old-space-size=4096"
        GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/firebase-service-account.json 